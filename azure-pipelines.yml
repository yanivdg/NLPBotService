trigger:
- main

pool:
  vmImage: ubuntu-latest
strategy:
  matrix:
    Python311:
      python.version: '3.11'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
      python -m pip install --upgrade pip
      pip install -r $(Build.SourcesDirectory)/.devcontainer/requirements.txt
  displayName: 'Install dependencies'

- powershell: |
    $publicIP = Invoke-RestMethod -Uri http://ipinfo.io/json | Select-Object -ExpandProperty ip
    Write-Host "##vso[task.setvariable variable=PublicIP]$publicIP"
  displayName: 'Get Public IP'

- powershell: |
    # Install the Azure PowerShell module if not already installed
    Install-Module -Name Az
    # Connect to your Azure account
    Connect-AzAccount
    # Create a DNS zone
    New-AzDnsZone -ResourceGroupName "YourResourceGroup" -Name "DR-PARRBOT.com"
    # Add an A record to the DNS zone
    Add-AzDnsRecordSet -ResourceGroupName "YourResourceGroup" -ZoneName "DR-PARRBOT.com" -RecordType A -Name "www" -IPv4Address "192.168.1.1"
  displayName: 'creating domain'

- powershell: |
    $dnsName = "DR-PARRBOT"  # Replace with your actual DNS name
    Write-Host "##vso[task.setvariable variable=DNSName]$dnsName"
  displayName: 'Set DNS Name'

- script: |
    # Install Certbot (if not already installed)
    sudo apt-get update
    sudo apt-get install -y certbot python3-certbot-nginx  # Install Certbot for NGINX
    
    # Run Certbot command to obtain or renew SSL certificate (non-interactive mode)
    #sudo certbot --nginx -d www.DR-PARRBOT.com --non-interactive --agree-tos --email yanivdg@live.com
  displayName: 'install certbot'

- script: | 
    export MY_PASSPHRASE=a1b2c3d4
    #openssl genpkey -algorithm RSA -out key.pem -aes256
    openssl genpkey -algorithm RSA -out key.pem -aes256 -pass env:MY_PASSPHRASE
    #openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365
    openssl req -new -key key.pem -out csr.pem
  displayName: 'SSL Cert openssl'

- script: | 
    echo "Public IP: $(PublicIP)"
    echo "DNS Name: $(DNSName)"
    # Use these values to access your service
  displayName: 'Print Values'

- script: |
    less main.py
    python -m http.server 5000
    #python main.py
    gunicorn -w 4 -b 0.0.0.0:5000 main:app
  displayName: 'Run Program'
